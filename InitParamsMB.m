 addpath(genpath('GEN'));
%Define some physical properties of the robot
DOF=4;
I(:,:,1)=4*[1 -0.1 -0.2; -0.1 2 -0.3;-0.2 -0.3 3];
I(:,:,2)=2*[1 -0.1 -0.2; -0.1 2 -0.3;-0.2 -0.3 3];
I(:,:,3)=2*[1 -0.1 -0.2; -0.1 2 -0.3;-0.2 -0.3 3];
I(:,:,4)=1*[1 -0.1 -0.2; -0.1 2 -0.3;-0.2 -0.3 3];
m=[8;4;4;2];
%r represents location of COM, in distance from the end of the link
r=[0.01, 0.01,0.01,0.01;
   -0.1 -0.2 -0.15 -0.05;
   -0.1 0.02 -0.02 0.02];
g(:,:,1,1)=[1 0 0 0; 0 1 0 .185;0 0 1 .197;0 0 0 1];%the link end home config frames
g(:,:,2,1)=[1 0 0 0; 0 1 0 .535;0 0 1 .197;0 0 0 1];
g(:,:,3,1)=[1 0 0 0; 0 1 0 .885;0 0 1 .197;0 0 0 1];
g(:,:,4,1)=[1 0 0 0; 0 1 0 1.025;0 0 1 .197;0 0 0 1];
g(:,:,1,2)=g(:,:,1,1); %center of mass locations
g(1:3,4,1,2)=g(1:3,4,1,2)+r(:,1);
g(:,:,2,2)=g(:,:,2,1);
g(1:3,4,2,2)=g(1:3,4,2,2)+r(:,2);
g(:,:,3,2)=g(:,:,3,1);
g(1:3,4,3,2)=g(1:3,4,3,2)+r(:,3);
g(:,:,4,2)=g(:,:,4,1);
g(1:3,4,4,2)=g(1:3,4,4,2)+r(:,4);
w=[0 0 1;1 0 0;1 0 0 ;1 0 0]';
q=[0 0 0;0 .185 .197;0 .535 .197;0 .885 .197]';
gravity=[0;0;-9.81];
fc=[1,2,3,1]; %coulomb friction
fv=[1,2,3,1]; %viscous friction
Tf=10; %end of sim (start of sim should always be t=0)
dt=.01; %time step for recording joint state
t=0:dt:Tf; %timesteps for changing torque
%Works well, but outside of torque boundaries. GlobalSearch, min singular
%value
%x=[0.0167   -1.6005   -0.0199    0.2443    0.7726   -0.4712   -0.0149    0.3013   -0.7854   -0.9047   -0.0000   -0.1334   -0.0000   -1.6636   -0.0001   -0.0928 .5 .5 .5 .5 .5 .5 .5 .5];
%Surrogateopt with min variance
x=[-0.1572    0.9565   -0.2726    0.1220    0.1137    0.0234    0.7966    0.5535   -0.3371   -0.1213   -0.0415    0.0245   -0.4841   -0.0169    0.1026    0.3004  0.0686   -0.0587   -0.3795    0.0344    0.3553   -0.0218   -0.1239   -0.0797];
%x=[  0.5987   -0.0896   -0.3716   -0.1679    0.0859   -0.0161    0.5784   -0.4018   -0.0334    0.0691   -0.0294   -0.1076   -0.5000   -0.0502    0.1708   -0.0401  0.0640   -0.0931    0.1642    0.3415   -0.0943   -0.1352    0.1270   -0.2045];
%Surrogateopt with det
%x=[0.5372    0.6958   -0.3485   -0.0336    0.0351    0.0881    0.8276    0.2988   -0.1485   -0.1329   -0.1471    0.0667   -0.7542   -0.1243   -0.0512   -0.0086    -0.2063    0.2326   -0.8568    0.1852    0.3352   -0.2265   -0.1901    0.0882];

%x=[ -0.8525   -0.7976    0.5386    0.1535   -0.0128   -0.0299    0.9210    0.1627    0.3078   -0.2352   -0.0981   -0.0291   -0.4381    0.0236    0.0369    0.0683     0.0174   -0.3216    0.5946   -0.2936    0.5368   -0.1024    0.1011    0.1316];

%Surrogate with singular val
%x=[  -0.9210   -0.2432   -0.0434    0.0570    0.0985    0.0440    0.9221   -0.2285   -0.3103   -0.0361    0.0271   -0.0492   -0.5761   -0.0267   -0.2418   -0.4107    0.1178   -0.0320    0.3735   -0.6055   -0.0584   -0.2810    0.2246    0.0590];

[t,js]=ComputeJs(t,x);
%js=randn(size(js,1),size(js,2)); %for random trajectory
pos_sigma=0.01; %std deviation for white noise on position data
tau_sigma=1; %std devation for white noise on torque data